esphome:
  name: ${device_name}
  friendly_name: ${device_friendly_name}
  project:
    name: "paulvincentroll.HomeDicator"
    version: ${homedicator_core_version_tag}

  includes:
    - HomeDicator/core/helpers/adjust_color.h

  platformio_options:
    build_unflags: -Werror=all
    lib_deps:
      - ArduinoJson

  on_boot:
    - priority: 800.0
      then:
        - script.execute: create_pager_dots
    - priority: 250.0
      then:
        - text_sensor.template.publish:
            id: github_release_tag
            state: ${homedicator_core_version_tag} # Set inital value to current version
        # Using ESPhome packages will cause the settings page to be the first one, lvgl.page.next will make it look like the last one again.
        - lvgl.page.next:
            animation: NONE
    - priority: 200.0
      then:
        - select.set_index:
            id: turn_off_screen_after_selector
            index: !lambda "return id(turn_off_screen_after_value);"
        - lambda: |-
            id(use_24h_clock_switch).publish_state(id(use_24h_clock));
        - lvgl.widget.update:
            id: lvgl_24h_clock_switch
            state:
              checked: !lambda "return id(use_24h_clock);"

logger:
  level: INFO

api:
  encryption:
    key: ${api_key}
  on_client_connected:
    - if:
        condition:
          - lambda: |-
              return client_info.find("Home Assistant") != std::string::npos;
        then:
          - delay: 2s # So all sensors can load their values
          - lvgl.widget.hide: connecting_view
  on_client_disconnected:
    - if:
        condition:
          - lambda: |-
              return client_info.find("Home Assistant") != std::string::npos;
        then:
          - lvgl.widget.show: connecting_view
